<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.snomed</groupId>
        <artifactId>snomed-parent-bom</artifactId>
        <version>3.7.0-SNAPSHOT</version>
    </parent>

    <name>classification-service</name>
    <groupId>org.snomed.otf</groupId>
    <artifactId>classification-service</artifactId>
    <version>9.3.0-SNAPSHOT</version>
    <properties>
        <packageName>${project.artifactId}</packageName>
        <execFinalName>${project.build.finalName}.jar</execFinalName>
        <docker.registry>docker.io</docker.registry>
        <docker.allowInsecureRegistries>false</docker.allowInsecureRegistries>
        <docker.image.prefix>snomedinternational</docker.image.prefix>
        <docker.image.tag>latest</docker.image.tag>
        <docker.base-image>amazoncorretto:17</docker.base-image>
    </properties>

    <dependencies>
        <!-- SNOMED OWL Toolkit (does all the heavy lifting) -->
        <dependency>
            <groupId>org.snomed.otf</groupId>
            <artifactId>snomed-owl-toolkit</artifactId>
        </dependency>

        <!-- Snomed International common -->
        <dependency>
            <groupId>org.ihtsdo.otf.common</groupId>
            <artifactId>otf-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ihtsdo.otf.common</groupId>
            <artifactId>resource-manager</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
        </dependency>

        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-broker</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!-- Spring Cloud aws -->
        <dependency>
            <groupId>io.awspring.cloud</groupId>
            <artifactId>spring-cloud-aws-autoconfigure</artifactId>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-to-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
        </dependency>

        <!-- Swagger API Docs -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        </dependency>
        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.skyscreamer</groupId>
                    <artifactId>jsonassert</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Consul and Vault -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-discovery</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-vault-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>deb</id>
            <build>
                <plugins>
                    <!-- Debian packaging -->
                    <plugin>
                        <groupId>org.vafer</groupId>
                        <artifactId>jdeb</artifactId>
                        <version>1.1.1</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jdeb</goal>
                                </goals>
                                <configuration>
                                    <deb>${project.build.directory}/${packageName}-${project.version}-all.deb</deb>
                                    <controlDir>${basedir}/src/deb/control</controlDir>
                                    <snapshotExpand>true</snapshotExpand>
                                    <snapshotEnv>BUILD_NUMBER</snapshotEnv>
                                    <verbose>true</verbose>
                                    <classifier>all</classifier>
                                    <signPackage>false</signPackage>
                                    <dataSet>
                                        <data>
                                            <src>${project.build.directory}/${execFinalName}</src>
                                            <dst>app.jar</dst>
                                            <type>file</type>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/opt/${packageName}/</prefix>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>${basedir}/src/deb/supervisor.conf</src>
                                            <dst>/etc/supervisor/conf.d/${packageName}.conf</dst>
                                            <type>file</type>
                                        </data>
                                    </dataSet>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-amd64</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>3.3.1</version>
                        <configuration>
                            <!-- Override the architecture to linux/amd64 -->
                            <from>
                                <image>${docker.base-image}</image>
                                <platforms>
                                    <platform>
                                        <architecture>amd64</architecture>
                                        <os>linux</os>
                                    </platform>
                                </platforms>
                            </from>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-arm64</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>3.3.1</version>
                        <configuration>
                            <from>
                                <image>${docker.base-image}</image>
                                <platforms>
                                    <platform>
                                        <architecture>arm64</architecture>
                                        <os>linux</os>
                                    </platform>
                                </platforms>
                            </from>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>ihtsdo-releases</id>
            <name>ihtsdo-releases</name>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <url>https://nexus3.ihtsdotools.org/repository/maven-releases/</url>
        </repository>
        <repository>
            <id>ihtsdo-snapshots</id>
            <name>ihtsdo-snapshots</name>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <url>https://nexus3.ihtsdotools.org/repository/maven-snapshots/</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <archive>
                                <manifestEntries>
                                    <Add-Opens>java.base/java.lang</Add-Opens>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>--add-opens java.base/java.lang=ALL-UNNAMED</argLine>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <mainClass>org.snomed.otf.reasoner.server.Application</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Docker Image Build -->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>
                    <container>
                        <labels>
                            <author>SNOMED International &lt;tooling@snomed.org&gt;</author>
                        </labels>
                        <mainClass>org.snomed.otf.reasoner.server.Application</mainClass>
                        <environment>
                            <application.title>${project.name}</application.title>
                            <application.version>${project.version}</application.version>
                        </environment>
                        <jvmFlags>
                            <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
                            <jvmFlag>--add-opens=java.base/java.lang=ALL-UNNAMED</jvmFlag>
                            <jvmFlag>-Xms2g</jvmFlag>
                            <jvmFlag>-Xmx4g</jvmFlag>
                        </jvmFlags>
                        <ports>
                            <port>8089</port>
                        </ports>
                        <volumes>
                            <volume>/tmp</volume>
                        </volumes>
                        <workingDirectory>/app</workingDirectory>
                    </container>
                    <from>
                        <image>${docker.base-image}</image>
                        <platforms>
                            <platform>
                                <architecture>arm64</architecture>
                                <os>linux</os>
                            </platform>
                            <platform>
                                <architecture>amd64</architecture>
                                <os>linux</os>
                            </platform>
                        </platforms>
                    </from>
                    <to>
                        <image>${docker.registry}/${docker.image.prefix}/${project.artifactId}</image>
                        <tags>
                            <tag>${docker.image.tag}</tag>
                            <tag>${project.version}</tag>
                        </tags>
                    </to>
                    <allowInsecureRegistries>${docker.allowInsecureRegistries}</allowInsecureRegistries>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
